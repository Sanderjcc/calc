*{
    padding: 0px;
    margin: 0px;
}

body{
    display: flex;
    justify-content: center;
    align-items: center;

    height: 100vh;
    background-color: lightgray;

}

div#calculator{
    display: grid;
    grid-template-rows: 1fr 2fr;
    background-color: #FF9D3D;
    border-radius: 5%;
    padding: 5px;


    min-height: 500px;
    min-width: 300px;

    box-shadow: 1px 1px 10px 2px #00000046;
}

input#screen{
    height: 100%;
    width: 100%;

    padding
}

section.inputArea{
    box-shadow: 0px -2px 3px 3px #0000001e;
    background-color: #3b3b3b;
    border-radius: 30px 30px 10px 10px;
    display: grid;
    margin: -5px;

    padding: 10px 5px 20px 5px;
    /* grid style daddy */
    /* amount of columns*/
    grid-template-columns: repeat(4, 2fr);
    grid-template-rows:  repeat(5, 2fr);
    /* space between lines and columns:
    gap:
    row-gap: 
    column-gap:
     */
    gap: 6px 5px;

    /* grid-templet-rows: height of each row */
    /* values: px, auto and fr */
    /* repeat(amount, width) */
    /* minmax(minWidth, maxWidth) */
    /* repeat(amount, minmax(minWidth, maxWidth)) */

    /* 
    ===================== align itens ==================================== 
    justify-items: aligns elements in their own cells
    align-items: aligns elements in their own cells
    place-items: align-items + justify-items

    justify-content: align X all the elements in theirs containers
    align-content: align Y all the elements in theirs containers

    justify-self
    align-self



    ==================== grid-areas !== grid-template ======================================
    -> in container:
        grid-template-areas:
        'x y' first line have two columns with x and y elements
        'y y' second line have two columns with one element (y) occuped 2 cels
        'z' third line
        '...'
        ;

    -> in element:
        grid-area:'x'; this elemtent is the x element



    ==================== pos elements =========================================================
        grid-column: the column of element;
        grid-column: span 2; occupies all columns up to the second

        grid-row: the row of element;
        grid-row: span 2; occupies all rows up to the second

    */


}

button.buttonInput{
    height: 100%;
    width: 100%;
    border-radius: 50%;
    color: white;
    background-color: #3b3b3b00;
    border: 0px solid #00000000;



    font-size: 1.2em;
}

button.buttonInput:hover{
    background-color: #ffffff0a;

    transition-duration: 0.5s;
}



button.equalButton{
    grid-column: 3 / 5 ;
    border-radius: 30px;
    width: 100%;

}
